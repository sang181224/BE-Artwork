
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  avatarUrl: 'avatarUrl',
  phone: 'phone',
  email: 'email',
  password: 'password',
  createdAt: 'createdAt',
  coverPhotoUrl: 'coverPhotoUrl',
  bio: 'bio',
  skills: 'skills',
  roleId: 'roleId'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.ArtworkScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  price: 'price',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  dimensions: 'dimensions',
  imageUrls: 'imageUrls',
  authorId: 'authorId',
  categoryId: 'categoryId'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.HashtagScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ArtworkHashtagScalarFieldEnum = {
  artworkId: 'artworkId',
  hashtagId: 'hashtagId'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  content: 'content',
  image_user: 'image_user',
  parentId: 'parentId',
  authorId: 'authorId',
  artworkId: 'artworkId',
  createdAt: 'createdAt'
};

exports.Prisma.ReactionTypeScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ReactionScalarFieldEnum = {
  userId: 'userId',
  artworkId: 'artworkId',
  reactionTypeId: 'reactionTypeId',
  createdAt: 'createdAt'
};

exports.Prisma.FollowsScalarFieldEnum = {
  followerId: 'followerId',
  followingId: 'followingId'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  content: 'content',
  createdAt: 'createdAt',
  senderId: 'senderId',
  receiverId: 'receiverId',
  read: 'read'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  name: 'name',
  avatarUrl: 'avatarUrl',
  phone: 'phone',
  email: 'email',
  password: 'password',
  coverPhotoUrl: 'coverPhotoUrl',
  bio: 'bio'
};

exports.Prisma.RoleOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.ArtworkOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  status: 'status',
  dimensions: 'dimensions',
  imageUrls: 'imageUrls'
};

exports.Prisma.CategoryOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.HashtagOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.CommentOrderByRelevanceFieldEnum = {
  content: 'content',
  image_user: 'image_user'
};

exports.Prisma.ReactionTypeOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.MessageOrderByRelevanceFieldEnum = {
  content: 'content'
};


exports.Prisma.ModelName = {
  User: 'User',
  Role: 'Role',
  Artwork: 'Artwork',
  Category: 'Category',
  Hashtag: 'Hashtag',
  ArtworkHashtag: 'ArtworkHashtag',
  Comment: 'Comment',
  ReactionType: 'ReactionType',
  Reaction: 'Reaction',
  Follows: 'Follows',
  Message: 'Message'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "E:\\CDIO4\\BE-Artwork\\artistry-network\\src\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "E:\\CDIO4\\BE-Artwork\\artistry-network\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"./src/generated/client\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ===== AUTH & USER MODELS =====\n\nmodel User {\n  id            Int      @id @default(autoincrement())\n  name          String\n  avatarUrl     String?  @db.Text\n  phone         String?  @unique\n  email         String   @unique\n  password      String   @db.Text\n  createdAt     DateTime @default(now())\n  coverPhotoUrl String?  @db.Text // Ảnh bìa\n  bio           String?  @db.Text\n  skills        Json?\n  roleId        Int\n  role          Role     @relation(fields: [roleId], references: [id])\n\n  // Relations\n  artworks  Artwork[]\n  comments  Comment[]\n  reactions Reaction[]\n  following Follows[]  @relation(\"Following\") // Danh sách những người mình theo dõi\n  followers Follows[]  @relation(\"Followers\")\n\n  // Messages\n  sentMessages     Message[] @relation(\"SentMessages\")\n  receivedMessages Message[] @relation(\"ReceivedMessages\")\n}\n\nmodel Role {\n  id          Int     @id @default(autoincrement())\n  name        String  @unique // e.g., \"Admin\", \"Member\"\n  description String?\n  users       User[]\n}\n\n// ===== ARTWORK MODELS =====\n\nmodel Artwork {\n  id          Int              @id @default(autoincrement())\n  title       String           @db.Text\n  description String?          @db.Text\n  price       Float?\n  status      String // 'draft', 'pending', 'approved', 'rejected'\n  createdAt   DateTime         @default(now())\n  updatedAt   DateTime         @updatedAt\n  dimensions  String?\n  imageUrls   String           @db.Text\n  authorId    Int\n  author      User             @relation(fields: [authorId], references: [id])\n  categoryId  Int\n  category    Category         @relation(fields: [categoryId], references: [id])\n  // Relations\n  hashtags    ArtworkHashtag[]\n  reactions   Reaction[]\n  comments    Comment[]\n}\n\nmodel Category {\n  id       Int       @id @default(autoincrement())\n  name     String    @unique\n  artworks Artwork[]\n}\n\nmodel Hashtag {\n  id       Int              @id @default(autoincrement())\n  name     String           @unique // e.g., #landscape, #abstract\n  artworks ArtworkHashtag[]\n}\n\n// Join table for Artwork and Hashtag (Many-to-Many)\nmodel ArtworkHashtag {\n  artworkId Int\n  artwork   Artwork @relation(fields: [artworkId], references: [id])\n\n  hashtagId Int\n  hashtag   Hashtag @relation(fields: [hashtagId], references: [id])\n\n  @@id([artworkId, hashtagId])\n}\n\n// ===== INTERACTION MODELS =====\n\nmodel Comment {\n  id         Int      @id @default(autoincrement())\n  content    String\n  image_user String   @db.Text\n  parentId   Int?\n  authorId   Int\n  artworkId  Int\n  author     User     @relation(fields: [authorId], references: [id])\n  artwork    Artwork  @relation(fields: [artworkId], references: [id])\n  createdAt  DateTime @default(now())\n}\n\nmodel ReactionType {\n  id        Int        @id @default(autoincrement())\n  name      String     @unique // e.g., \"like\", \"love\", \"haha\"\n  reactions Reaction[]\n}\n\n// Join table for User, Artwork, and ReactionType\nmodel Reaction {\n  userId         Int\n  user           User         @relation(fields: [userId], references: [id])\n  artworkId      Int\n  artwork        Artwork      @relation(fields: [artworkId], references: [id])\n  reactionTypeId Int\n  reactionType   ReactionType @relation(fields: [reactionTypeId], references: [id])\n  createdAt      DateTime     @default(now())\n\n  @@id([userId, artworkId])\n}\n\nmodel Follows {\n  followerId Int\n  follower   User @relation(\"Following\", fields: [followerId], references: [id])\n\n  followingId Int\n  following   User @relation(\"Followers\", fields: [followingId], references: [id])\n\n  @@id([followerId, followingId])\n}\n\nmodel Message {\n  id         Int      @id @default(autoincrement())\n  content    String   @db.Text\n  createdAt  DateTime @default(now())\n  senderId   Int\n  receiverId Int\n  read       Boolean  @default(false)\n\n  sender   User @relation(\"SentMessages\", fields: [senderId], references: [id], onDelete: Cascade)\n  receiver User @relation(\"ReceivedMessages\", fields: [receiverId], references: [id], onDelete: Cascade)\n\n  @@index([senderId, receiverId])\n}\n",
  "inlineSchemaHash": "b889e3a2942f294b84890ff0a5ac5797cfc49bb7e1c46ab4ef5e557718b723b3",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"coverPhotoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUser\"},{\"name\":\"artworks\",\"kind\":\"object\",\"type\":\"Artwork\",\"relationName\":\"ArtworkToUser\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToUser\"},{\"name\":\"reactions\",\"kind\":\"object\",\"type\":\"Reaction\",\"relationName\":\"ReactionToUser\"},{\"name\":\"following\",\"kind\":\"object\",\"type\":\"Follows\",\"relationName\":\"Following\"},{\"name\":\"followers\",\"kind\":\"object\",\"type\":\"Follows\",\"relationName\":\"Followers\"},{\"name\":\"sentMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"SentMessages\"},{\"name\":\"receivedMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ReceivedMessages\"}],\"dbName\":null},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RoleToUser\"}],\"dbName\":null},\"Artwork\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dimensions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrls\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ArtworkToUser\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"ArtworkToCategory\"},{\"name\":\"hashtags\",\"kind\":\"object\",\"type\":\"ArtworkHashtag\",\"relationName\":\"ArtworkToArtworkHashtag\"},{\"name\":\"reactions\",\"kind\":\"object\",\"type\":\"Reaction\",\"relationName\":\"ArtworkToReaction\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"ArtworkToComment\"}],\"dbName\":null},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"artworks\",\"kind\":\"object\",\"type\":\"Artwork\",\"relationName\":\"ArtworkToCategory\"}],\"dbName\":null},\"Hashtag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"artworks\",\"kind\":\"object\",\"type\":\"ArtworkHashtag\",\"relationName\":\"ArtworkHashtagToHashtag\"}],\"dbName\":null},\"ArtworkHashtag\":{\"fields\":[{\"name\":\"artworkId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"artwork\",\"kind\":\"object\",\"type\":\"Artwork\",\"relationName\":\"ArtworkToArtworkHashtag\"},{\"name\":\"hashtagId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hashtag\",\"kind\":\"object\",\"type\":\"Hashtag\",\"relationName\":\"ArtworkHashtagToHashtag\"}],\"dbName\":null},\"Comment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image_user\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"artworkId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CommentToUser\"},{\"name\":\"artwork\",\"kind\":\"object\",\"type\":\"Artwork\",\"relationName\":\"ArtworkToComment\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ReactionType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reactions\",\"kind\":\"object\",\"type\":\"Reaction\",\"relationName\":\"ReactionToReactionType\"}],\"dbName\":null},\"Reaction\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReactionToUser\"},{\"name\":\"artworkId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"artwork\",\"kind\":\"object\",\"type\":\"Artwork\",\"relationName\":\"ArtworkToReaction\"},{\"name\":\"reactionTypeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reactionType\",\"kind\":\"object\",\"type\":\"ReactionType\",\"relationName\":\"ReactionToReactionType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Follows\":{\"fields\":[{\"name\":\"followerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"follower\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Following\"},{\"name\":\"followingId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"following\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Followers\"}],\"dbName\":null},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SentMessages\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReceivedMessages\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

